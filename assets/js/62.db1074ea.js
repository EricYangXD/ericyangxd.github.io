(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{737:function(s,a,t){"use strict";t.r(a);var e=t(7),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"入门知识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#入门知识"}},[s._v("#")]),s._v(" 入门知识")]),s._v(" "),t("p",[s._v("用于操作数据库")]),s._v(" "),t("h2",{attrs:{id:"举例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[s._v("#")]),s._v(" 举例")]),s._v(" "),t("h3",{attrs:{id:"使用-mybatis-查询所有用户数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-mybatis-查询所有用户数据"}},[s._v("#")]),s._v(" 使用 MyBatis 查询所有用户数据")]),s._v(" "),t("ol",[t("li",[s._v("准备工作：创建 SpringBoot 工程，数据库表 User，实体类 User，字段和属性最好一一对应起来")]),s._v(" "),t("li",[s._v("引入 MyBatis 的相关依赖，配置 MyBatis（数据库的连接信息等）")]),s._v(" "),t("li",[s._v("编写 SQL 语句（注解/xml）")])]),s._v(" "),t("ul",[t("li",[s._v("创建 idea 项目时，勾选 MyBatisFramework 和 MySQLDriver（驱动）")]),s._v(" "),t("li",[s._v("数据库连接的四要素：在 application.properties 中配置\n"),t("ul",[t("li",[s._v("spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver")]),s._v(" "),t("li",[s._v("spring.datasource.url=jdbc:mysql://localhost:3306/db_name")]),s._v(" "),t("li",[s._v("spring.datasource.username=root")]),s._v(" "),t("li",[s._v("spring.datasource.password=123456")])])]),s._v(" "),t("li",[s._v("@Mapper: 在接口上使用，表示这个接口是 MyBatis 的 Mapper 接口，可以被 SpringBoot 扫描到。（属于 DAO 层）")]),s._v(" "),t("li",[s._v("@MapperScan：在启动类上使用，表示扫描 MyBatis 的 Mapper 接口")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Mapper")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UserMapper")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Select")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"select * from user"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("list")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Mapper")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EmpMapper")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Delete")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"delele from emp where id=#{id}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("delete")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("ul",[t("li",[s._v("技巧：在注解中写 SQL 语句时，可以先通过设置："),t("code",[s._v("选中SQL语句->Show Context Actions->Inject language or reference->MySQL(SQL)")]),s._v("，然后再写 SQL 语句，这样就可以有语法提示了！！！")]),s._v(" "),t("li",[s._v("如果表名爆红，那可能是因为表名和数据库名不一致，可以在 "),t("code",[s._v("application.properties")]),s._v(" 中配置："),t("code",[s._v("spring.datasource.name=db_name")]),s._v("，这样就可以了")])]),s._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[s._v("jdbc：Java Database Connectivity，Java 数据库连接，是一种用于执行 SQL 语句的 Java API，可以为多种关系数据库提供统一访问，它由一组用 Java 语言编写的类和接口组成。JDBC 提供了一种基准，据此可以构建更高级的工具和接口，使数据库开发人员能够编写数据库应用程序。")]),s._v(" "),t("li",[s._v("数据库连接池：是一个容器，负责分配、管理数据库链接，资源复用、提升系统响应速度，要实现 oracle 的 DataSource 接口")]),s._v(" "),t("li",[s._v("数据库连接池工具："),t("code",[s._v("C3P0、DBCP、Druid（alibaba）、Hikari（default）")])]),s._v(" "),t("li",[s._v("lombok：可以通过注解的方式，简化代码，比如："),t("code",[s._v("@Data、@Getter、@Setter、@ToString、@NoArgsConstructor、@AllArgsConstructor、@EqualsAndHashCode、@Slf4j、@Log4j、@Log4j2、@Log、@CommonsLog、@Flogger、@JBossLog、@XSlf4j、@CustomLog")])]),s._v(" "),t("li",[s._v("测试的时候可以通过"),t("code",[s._v("@Autowired")]),s._v(" 注入 Mapper，然后调用方法，不需要手动创建 Mapper 对象")]),s._v(" "),t("li",[s._v("预编译 sql 语句：使用 PreparedStatement，可以防止 sql 注入，提高性能")]),s._v(" "),t("li",[s._v("update 的时候，使用的是属性名，而不是数据库的字段名。新增（主键返回）："),t("code",[s._v('@Options(useGeneratedKeys = true, keyProperty = "id")')])]),s._v(" "),t("li",[s._v("实体类属性名和数据库表查询返回的字段名一致，MyBatis 会自动封装，不一致的话，需要手动封装：例如")]),s._v(" "),t("li",[s._v("设置别名，"),t("code",[s._v("select id userid, name username, pwd password from user")]),s._v("。")]),s._v(" "),t("li",[s._v("通过@Results 注解手动映射封装，"),t("code",[s._v('@Results(id = "userMap", value = {@Result(id = true, column = "id", property = "userid"), @Result(column = "name", property = "username"), @Result(column = "pwd", property = "password")})')]),s._v("，然后在@Select 注解中使用："),t("code",[s._v('@ResultMap(value = {"userMap"})')]),s._v("。")]),s._v(" "),t("li",[s._v("在 "),t("code",[s._v("application.properties")]),s._v(" 中开启 MyBatis 的驼峰命名自动映射开关："),t("code",[s._v("mybatis.configuration.map-underscore-to-camel-case=true")]),s._v("。需要严格遵守驼峰命名规则。")]),s._v(" "),t("li",[s._v("使用 concat 函数拼接字符串，"),t("code",[s._v("select id, name, pwd from user where name like concat('%', #{name}, '%')")]),s._v("。")]),s._v(" "),t("li",[s._v("xml 映射文件规范：\n"),t("ol",[t("li",[s._v("xml 映射文件的名称与 mapper 接口的名称相同，且在同一个目录下（同包同名）")]),s._v(" "),t("li",[s._v("xml 映射文件的 namespace 属性与 mapper 接口全限定名相同")]),s._v(" "),t("li",[s._v("xml 映射文件中 sql 语句的 id 属性值必须与 mapper 接口中的方法名相同，并且保持返回类型一致")])])]),s._v(" "),t("li",[s._v("简单的 sql 用注解，复杂的用 xml 映射")]),s._v(" "),t("li",[s._v("动态 SQL："),t("code",[s._v('<where> <if test="xxx"> sql </if></where>')]),s._v("，"),t("code",[s._v("where")]),s._v("标签可以消除第一个判断不成立时后续判断中的"),t("code",[s._v("and")]),s._v("等问题，"),t("code",[s._v("<set>")]),s._v("用在 update 语句中可以去除语句中多余的"),t("code",[s._v(",")]),s._v(" "),t("ol",[t("li",[s._v("if 用于判断条件是否成立，成立则拼接 sql 语句，形式："),t("code",[s._v('<if test="name!=null">...</if>')])]),s._v(" "),t("li",[s._v("where 元素只会在至少有一个子元素的条件返回 SQL 子句的情况下才去插入“WHERE”子句。而且，若语句的开头为“AND”或“OR”，where 元素也会将它们去除。")]),s._v(" "),t("li",[s._v("set 动态的更新语句，只会在至少有一个子元素的条件返回 SQL 子句的情况下才去插入“SET”子句。而且，若语句的开头为“,”，set 元素也会将它们去除。")]),s._v(" "),t("li",[s._v("foreach 用于遍历集合或数组，形式："),t("code",[s._v('<foreach collection="list" item="item" index="index" open="(" close=")" separator=",">#{item}</foreach>')])]),s._v(" "),t("li",[s._v("include 用于引入外部 sql 文件(也可以直接在 xml 中通过"),t("code",[s._v('<sql id="xxx"></sql>')]),s._v("标签直接定义可重用的 sql 片段)，形式："),t("code",[s._v('<include refid="userMap"/>')]),s._v("，引入的 sql 文件中的 sql 语句的 id 属性值必须与 mapper 接口中的方法名相同，并且保持返回类型一致")])])]),s._v(" "),t("li",[t("code",[s._v("<select></select>")])])]),s._v(" "),t("h2",{attrs:{id:"mybatis-plus"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-plus"}},[s._v("#")]),s._v(" MyBatis Plus")]),s._v(" "),t("p",[s._v("MyBatis Plus （简称 MP） 是一款持久层框架，说白话就是一款操作数据库的框架。它是一个 MyBatis 的增强工具，就像 iPhone手机一般都有个 plus 版本一样，它在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。")]),s._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- Mybatis Plus --\x3e")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("com.baomidou"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("mybatis-plus-boot-starter"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("${mybatis-plus.version}"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("ol",[t("li",[s._v("p6spy 组件打印完整的 SQL 语句、执行耗时。请使用 Mybatis Plus 3.1.0 以上版本。")]),s._v(" "),t("li",[s._v("不要在生产环境用！")])])])}),[],!1,null,null,null);a.default=n.exports}}]);