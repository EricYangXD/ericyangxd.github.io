(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{742:function(a,s,t){"use strict";t.r(s);var e=t(7),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"tips-skills"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tips-skills"}},[a._v("#")]),a._v(" Tips & Skills")]),a._v(" "),t("h3",{attrs:{id:"jdk-设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk-设置"}},[a._v("#")]),a._v(" JDK 设置")]),a._v(" "),t("ol",[t("li",[a._v("包含关系 JDK > JRE > JVM")])]),a._v(" "),t("h4",{attrs:{id:"mac"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mac"}},[a._v("#")]),a._v(" Mac")]),a._v(" "),t("ol",[t("li",[a._v("全局安装 JDK 配置"),t("code",[a._v(".zshrc")]),a._v(" or"),t("code",[a._v(".bash_profile")])])]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#maven")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("MAVEN_HOME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/Users/eric/backend/maven\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MAVEN_HOME}")]),a._v("/bin:/"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),a._v(":.\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#java")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("JAVA_8_HOME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/Library/Java/JavaVirtualMachines/jdk1.8.0_341.jdk/Contents/Home\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("JAVA_11_HOME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/Library/Java/JavaVirtualMachines/jdk-11.0.16.1.jdk/Contents/Home\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("JAVA_17_HOME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/Library/Java/JavaVirtualMachines/jdk-17.0.4.1.jdk/Contents/Home\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("JAVA_HOME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$JAVA_8_HOME")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${JAVA_HOME}")]),a._v("/bin:"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),a._v(":.\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CLASSPATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$JAVA_HOME")]),a._v("/lib/tools.jar:"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$JAVA_HOME")]),a._v("/lib/dt.jar\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('#alias jdk8="export JAVA_HOME=$JAVA_8_HOME"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('#alias jdk11="export JAVA_HOME=$JAVA_11_HOME"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('#alias jdk17="export JAVA_HOME=$JAVA_17_HOME"')]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br"),t("span",{staticClass:"line-number"},[a._v("16")]),t("br")])]),t("h4",{attrs:{id:"windows"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#windows"}},[a._v("#")]),a._v(" Windows")]),a._v(" "),t("p",[a._v("配置环境变量：")]),a._v(" "),t("ol",[t("li",[a._v("配置 path："),t("code",[a._v("新建->变量名JAVA_HOME")]),a._v("，变量值："),t("code",[a._v("C:\\Program Files\\xxx\\Java\\jdk1.4.1")]),a._v("（这里是你的 JDK 的安装路径）")]),a._v(" "),t("li",[t("code",[a._v("编辑->变量名Path")]),a._v("，在原变量值的最后面加上："),t("code",[a._v(";%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin")])]),a._v(" "),t("li",[t("code",[a._v("新建->变量名CLASSPATH")]),a._v(",变量值："),t("code",[a._v(".;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar")])])]),a._v(" "),t("ul",[t("li",[a._v("配置 JAVA_HOME 的作用： 指定 java 安装目录")]),a._v(" "),t("li",[a._v("配置 PATH 的作用：指定 java 命令搜索路径。本来只有在 jdk 的 bin 目录才可以运行 javac java 命令，但如果希望在任意的目录下面都可以访问到 javac java 命令，就必须配置 path")]),a._v(" "),t("li",[a._v("配置 CLASSPATH 的作用： 指定 Java 执行环境，在哪些目录下可以找到您所要执行的 Java 程序所需要的类或者包。通俗的说它的作用与 import、package 关键字有关，我们写的 java 源码中，当然会包含别人提供的工具类，比如当你写下 improt java.util.*时，编译器面对 import 关键字时，就需要知道你要引入 java.util 这个 package 中的类到底在哪里。与上面的一样， 如果不告诉，他就默认在当前目录下，而如何告诉它呢？就是设置 CLASSPATH。（从 java5 开始也可以不配置，但建议配上）")])]),a._v(" "),t("p",[a._v("在控制台分别输入 java，javac，java -version 命令，出现如下所示的 JDK 的编译器信息，包括修改命令的语法和参数选项等信息。")]),a._v(" "),t("h3",{attrs:{id:"tomcat-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tomcat-配置"}},[a._v("#")]),a._v(" Tomcat 配置")]),a._v(" "),t("p",[a._v("Tomcat 环境变量配置：")]),a._v(" "),t("ul",[t("li",[a._v("如果你的 Tomcat 安装在 C 盘里，如："),t("code",[a._v("C:\\Program Files\\Apache Software Foundation\\Tomcat 8.0")]),a._v("（在这里切记，安装 Tomcat 时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）")])]),a._v(" "),t("ol",[t("li",[a._v("点击新建。变量名为"),t("code",[a._v("TOMCAT_HOME")]),a._v("，变量值为 Tomcat 安装目录")]),a._v(" "),t("li",[a._v("在系统变量里点新建：")])]),a._v(" "),t("ul",[t("li",[a._v("变量名："),t("code",[a._v("CATALINA_BASE")])]),a._v(" "),t("li",[a._v("变量值："),t("code",[a._v("C:\\Program Files\\Apache Software Foundation\\Tomcat 8.0;")])])]),a._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[a._v("再次新建：")])]),a._v(" "),t("ul",[t("li",[a._v("变量名："),t("code",[a._v("CATALINA_HOME")])]),a._v(" "),t("li",[a._v("变量值："),t("code",[a._v("C:\\Program Files\\Apache Software Foundation\\Tomcat 8.0;")])]),a._v(" "),t("li",[a._v("点击确定")])]),a._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[a._v("在 classpath 中加入"),t("code",[a._v("%CATALINA_HOME%\\common\\lib\\servlet-api.jar;")]),a._v("（注意加的时候在原变量值后加英文状态下的"),t("code",[a._v(";")]),a._v("）")]),a._v(" "),t("li",[a._v("在 path 中加入"),t("code",[a._v("%CATALINA_HOME%\\bin;")]),a._v("（注意加的时候在原变量值后加英文状态下的"),t("code",[a._v(";")]),a._v("）")])]),a._v(" "),t("h3",{attrs:{id:"idea-vm-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#idea-vm-options"}},[a._v("#")]),a._v(" IDEA VM Options")]),a._v(" "),t("p",[a._v("根据机器情况修改 idea.vmoptions 配置，可以提高 idea 的运行流畅度。")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("-Xms1024m\n-Xmx2048m\n-XX:+UseConcMarkSweepGC\n-Djava.net.preferIPv4Stack"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true\n-Dfile.encoding"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("UTF-8\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])]),t("h3",{attrs:{id:"修改-idea-中-tomcat-运行端口号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改-idea-中-tomcat-运行端口号"}},[a._v("#")]),a._v(" 修改 IDEA 中 Tomcat 运行端口号")]),a._v(" "),t("p",[a._v("在"),t("code",[a._v("application.properties")]),a._v("配置文件中设置"),t("code",[a._v("server.port=8080")]),a._v("即可。")]),a._v(" "),t("h2",{attrs:{id:"mysql-一行记录是怎么存储的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql-一行记录是怎么存储的"}},[a._v("#")]),a._v(" MySQL 一行记录是怎么存储的？")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("MySQL 的数据都是保存在磁盘的，那具体是保存在哪个文件呢：MySQL 存储的行为是由存储引擎实现的，MySQL 支持多种存储引擎，不同的存储引擎保存的文件自然也不同。InnoDB 是我们常用的存储引擎，也是 MySQL 默认的存储引擎。所以，本文主要以 InnoDB 存储引擎展开讨论。")])]),a._v(" "),t("li"),a._v(" "),t("li",[t("p",[a._v("MySQL 的 NULL 值会占用空间吗？")])]),a._v(" "),t("li",[t("p",[a._v("MySQL 怎么知道 varchar(n) 实际占用数据的大小？")])]),a._v(" "),t("li",[t("p",[a._v("varchar(n) 中 n 最大取值为多少？")])]),a._v(" "),t("li",[t("p",[a._v("行溢出后，MySQL 是怎么处理的？")])])]),a._v(" "),t("h2",{attrs:{id:"项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目"}},[a._v("#")]),a._v(" 项目")]),a._v(" "),t("h3",{attrs:{id:"秒杀系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#秒杀系统"}},[a._v("#")]),a._v(" 秒杀系统")]),a._v(" "),t("p",[a._v("使用SpringMVC+Spring+MyBatis框架，原因：")]),a._v(" "),t("ol",[t("li",[a._v("框架易于使用和轻量级")]),a._v(" "),t("li",[a._v("低代码侵入性")]),a._v(" "),t("li",[a._v("成熟的社区和用户群")])]),a._v(" "),t("h4",{attrs:{id:"系统分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#系统分析"}},[a._v("#")]),a._v(" 系统分析")]),a._v(" "),t("ol",[t("li",[a._v("秒杀业务的核心：对产品库存的处理。")]),a._v(" "),t("li",[a._v("难点在于“竞争”")]),a._v(" "),t("li",[a._v("优化方向：减少事务行级锁的竞争")])]),a._v(" "),t("blockquote",[t("p",[a._v("创建项目")])]),a._v(" "),t("p",[a._v("命令："),t("code",[a._v("mvn archetype:create -DgroupId=org.seckill -DartifactId=seckill -DarchetypeArtifactId=maven-archetype-webapp")])]),a._v(" "),t("blockquote",[t("p",[a._v("MyBatis")])]),a._v(" "),t("h4",{attrs:{id:"mysql表设计-dao层设计与开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql表设计-dao层设计与开发"}},[a._v("#")]),a._v(" MySQL表设计-DAO层设计与开发")]),a._v(" "),t("h4",{attrs:{id:"mybatis合理使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mybatis合理使用"}},[a._v("#")]),a._v(" MyBatis合理使用")]),a._v(" "),t("h4",{attrs:{id:"mybatis与spring整合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mybatis与spring整合"}},[a._v("#")]),a._v(" MyBatis与Spring整合")]),a._v(" "),t("p",[a._v("JDBC、Hibernate、MyBatis都是用来简化数据库操作的框架，把Entity（Bean）对象映射成数据库中的对象也能把数据库中的数据映射成Entity对象，从而让开发者可以通过代码实现对数据库的操作，并得到相应的数据。MyBatis是基于Java的持久层框架，它支持定制化SQL、存储过程以及高级映射。MyBatis避免了几乎所有的JDBC代码和手动设置参数以及获取结果集。MyBatis可以使用简单的XML或注解来配置和映射原生信息，将接口和Java的POJOs（Plain Old Java Objects）映射成数据库中的记录。Hibernate、MyBatis都是orm对象关系映射框架。")]),a._v(" "),t("ol",[t("li",[a._v("MyBatis特点：参数+SQL=Entity/List")]),a._v(" "),t("li",[a._v("SQL写在哪？可以写在xml文件中或者写在注解中@SQL")]),a._v(" "),t("li",[a._v("如何实现DAO接口？Mapper自动实现DAO接口impl或者API编程方式实现DAO接口")]),a._v(" "),t("li",[a._v("Mapper自动实现DAO接口impl：创建对应的DAO.xml文件，然后设置正确的DOCTYPE，然后在"),t("code",[a._v("<mapper></mapper>")]),a._v("标签中编写对应的sql语句，命名正确的namespace。即xml提供SQL，Mapper自动实现DAP接口。")]),a._v(" "),t("li",[t("code",[a._v("jdbc.properties")]),a._v("中配置driver、url等数据库信息")])]),a._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[a._v("driver=com.mysql.jdbc.Driver\nurl=jdbc:mysql://127.0.0.1:3307\nusername=root\npassword=root\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("ol",{attrs:{start:"6"}},[t("li",[a._v("在xml中，通过bean标签配置c3p0连接池class，在property标签中配置"),t("code",[a._v("jdbc.properties")]),a._v("中的属性，比如设置c3p0连接池的私有属性："),t("code",[a._v('<property name="maxPoolSize" value="30"/><property name="minPoolSize" value="10"/>')]),a._v("这种。还要配置SqlSessionFactory对象，在其下注入数据库连接池，配置MyBatis全局配置文件，对扫描的Entity包、sql配置文件等使用别名配置正确。然后还要配置扫描DAO接口包，动态实现DAO接口注入到Spring容器中--MapperScannerConfigurer，sqlSessionFactoryBeanName。")]),a._v(" "),t("li",[t("code",[a._v("classpath")]),a._v("相当于java和resources两个文件夹的路径别名，比如"),t("code",[a._v("classpath:jdbc.properties")]),a._v("能直接找到jdbc.properties这个配置文件。")]),a._v(" "),t("li",[a._v("在MyBatis中，DAO接口方法的参数需要使用"),t("code",[a._v('@Param("myId") long id')]),a._v("的形式来在单元测试中识别多个参数，单个参数可以不用。")])]),a._v(" "),t("blockquote",[t("p",[a._v("Spring")])]),a._v(" "),t("h4",{attrs:{id:"spring-ioc整合service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-ioc整合service"}},[a._v("#")]),a._v(" Spring IOC整合Service")]),a._v(" "),t("ol",[t("li",[a._v("dto文件夹下存放service返回的数据类，关注的是web和web service之间的数据传递。Entity下面放的是业务数据的封装。\n"),t("ul",[t("li",[a._v("DTO 用于数据传输，主要用于在不同层之间传递数据，尤其是在 Web 层和服务层之间。关注的是接口层的需求，更多用于表示向客户端提供的数据结构。简化数据传输，解耦和安全，序列化友好。")]),a._v(" "),t("li",[a._v("Entity 则是业务数据的核心表示，通常表示业务数据和数据库表之间的映射。关注的是数据持久化和业务逻辑。与数据库表映射，业务逻辑，持久化。")])])]),a._v(" "),t("li",[a._v("站在使用者角度设计Service，而不是站在实现者角度设计Service，方法定义粒度明确，参数要简洁，返回类型要友好")]),a._v(" "),t("li",[a._v("service文件夹下创建impl文件夹实现service")]),a._v(" "),t("li",[a._v("使用Spring托管service，并提供一致的访问接口，可以通过注解或者applicationContext去拿实例")]),a._v(" "),t("li",[a._v("Spring IOC注入方式和场景：xml、注解、Java配置类。\n"),t("ul",[t("li",[a._v("xml：1:Bean实现类来自第三方类库，如：DataSource等；2：需要命名空间配置如：context，aop，mvc等")]),a._v(" "),t("li",[a._v("注解：项目中自身开发使用的类，可直接在代码中使用注解如：@Service，@Controller，@Dao，@Component等")]),a._v(" "),t("li",[a._v("Java配置类：需要通过代码控制对象创建逻辑的场景如：自定义修改依赖类库。")])])]),a._v(" "),t("li",[a._v("xml配置 -> package-scan -> Annotation注解 "),t("code",[a._v('<context:component-scan base-package="com.example.xxx" />')])])]),a._v(" "),t("h4",{attrs:{id:"声明式事务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#声明式事务"}},[a._v("#")]),a._v(" 声明式事务")]),a._v(" "),t("ol",[t("li",[a._v("使用方式：\n"),t("ul",[t("li",[a._v("ProxyFactoryBean+xml")]),a._v(" "),t("li",[a._v("tx:advice+aop命名空间")]),a._v(" "),t("li",[a._v("注解@Transactional")])])]),a._v(" "),t("li",[a._v("事务方法嵌套：新的事务会加入到已有的事务中，如果之前没有事务才会新建一个事务")]),a._v(" "),t("li",[a._v("什么时候回滚事务：抛出运行期异常RuntimeException时。小心不当的try catch，会导致部分事务即使失败了也不会自动回滚。")])]),a._v(" "),t("blockquote",[t("p",[a._v("SpringMVC")])]),a._v(" "),t("p",[a._v("在xml中配置SpringMVC")]),a._v(" "),t("ol",[t("li",[a._v("开启SpringMVC注解模式："),t("code",[a._v("<mvc:annotation-driven/>")]),a._v(" "),t("ul",[t("li",[a._v("简化配置：1. 自动注册DefaultAnnotationHandlerMapping，AnnotationMethodHandlerAdapter；2. 提供一系列数据绑定、数字和日期的format-@NumberFormat、@DateTimeFormat，xml、json默认读写支持")])])]),a._v(" "),t("li",[a._v("静态资源默认servlet配置："),t("code",[a._v("<mvc:default-servlet-handler/>")]),a._v(" "),t("ul",[t("li",[a._v('servlet-mapping映射路径："/"')]),a._v(" "),t("li",[a._v("加入对静态资源的处理：js，jpg，png，css，gif...")]),a._v(" "),t("li",[a._v('允许使用"/"做整体映射')])])]),a._v(" "),t("li",[a._v("配置jsp显示ViewResolver："),t("code",[a._v('<bean class="...InternalResourceViewResolver"><property xxx></property></bean>')]),a._v(" "),t("ul",[t("li",[a._v("配置jsp，放置位置，后缀名，prefix，suffix，viewClass等")]),a._v(" "),t("li",[a._v("通过ViewResolver实现页面跳转")])])]),a._v(" "),t("li",[a._v("扫描web相关的bean："),t("code",[a._v('<context:component-scan base-package="com.xx.xx" />')])])]),a._v(" "),t("h4",{attrs:{id:"restful接口设计和使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#restful接口设计和使用"}},[a._v("#")]),a._v(" Restful接口设计和使用")]),a._v(" "),t("h4",{attrs:{id:"框架运作流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#框架运作流程"}},[a._v("#")]),a._v(" 框架运作流程")]),a._v(" "),t("h4",{attrs:{id:"controller开发技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#controller开发技巧"}},[a._v("#")]),a._v(" Controller开发技巧")]),a._v(" "),t("blockquote",[t("p",[a._v("高并发")])]),a._v(" "),t("h4",{attrs:{id:"高并发点和高并发瓶颈分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高并发点和高并发瓶颈分析"}},[a._v("#")]),a._v(" 高并发点和高并发瓶颈分析")]),a._v(" "),t("ol",[t("li",[a._v("数据库操作加解锁，事务竞争，排队，GC")]),a._v(" "),t("li",[a._v("网络延迟，异地机房，CDN")])]),a._v(" "),t("h4",{attrs:{id:"高并发优化思路及实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高并发优化思路及实现"}},[a._v("#")]),a._v(" 高并发优化思路及实现")]),a._v(" "),t("ol",[t("li",[a._v("减少操作数据库时上锁的时间，减少数据库的压力")]),a._v(" "),t("li",[a._v("使用缓存，减少数据库的访问")]),a._v(" "),t("li",[a._v("使用异步处理，减少用户等待时间")]),a._v(" "),t("li",[a._v("使用CDN，减少网络延迟")]),a._v(" "),t("li",[a._v("使用分布式，减少单机压力")])]),a._v(" "),t("h4",{attrs:{id:"如何判断update更新数据库成功"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何判断update更新数据库成功"}},[a._v("#")]),a._v(" 如何判断Update更新数据库成功")]),a._v(" "),t("ol",[t("li",[a._v("update没报错+客户端确认update影响记录数")])]),a._v(" "),t("p",[a._v("优化思路：把客户端逻辑放到MySQL服务端，避免网络延迟和GC的影响")]),a._v(" "),t("p",[a._v("方案：")]),a._v(" "),t("ol",[t("li",[a._v("定制SQL方案："),t("code",[a._v("update /* + [auto_commit] */")]),a._v("，需要修改MySQL源码")]),a._v(" "),t("li",[a._v("使用存储过程：整个事务在MySQL端完成")])]),a._v(" "),t("h4",{attrs:{id:"redis后端缓存优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis后端缓存优化"}},[a._v("#")]),a._v(" Redis后端缓存优化")]),a._v(" "),t("ol",{attrs:{start:"0"}},[t("li",[a._v("需要手动在xml中注入RedisDao，因为MyBatis不处理Redis，构造函数需要通过"),t("code",[a._v('<constructor-arg index="0" value="localhost" />')]),a._v("传入")]),a._v(" "),t("li",[a._v("使用protobuf对json数据进行序列化反序列化，性能最强！")]),a._v(" "),t("li",[a._v("创建RedisPool连接池，缓存优化")]),a._v(" "),t("li",[a._v("在超时的基础上维护一致性")])]),a._v(" "),t("h4",{attrs:{id:"并发优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#并发优化"}},[a._v("#")]),a._v(" 并发优化")]),a._v(" "),t("ol",[t("li",[a._v("MyBatis调用存储过程，在xml中配置")]),a._v(" "),t("li",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/EricYangXD/vital-images@master/imgs/202411071613279.png",alt:"后端系统部署架构"}})])])])}),[],!1,null,null,null);s.default=r.exports}}]);