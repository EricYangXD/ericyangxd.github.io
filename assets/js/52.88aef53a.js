(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{729:function(t,s,a){"use strict";a.r(s);var e=a(7),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"git-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-命令"}},[t._v("#")]),t._v(" Git 命令")]),t._v(" "),a("h3",{attrs:{id:"git-rebase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase"}},[t._v("#")]),t._v(" git rebase")]),t._v(" "),a("blockquote",[a("p",[t._v("不要对在你的仓库外有副本的分支执行变基。")])]),t._v(" "),a("p",[t._v("与 merge 会保留修改内容的历史记录不同，rebase 是在原有提交的基础上将差异内容反映进去。")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("git rebase oem-develop")]),t._v(" "),a("ul",[a("li",[t._v("切换到自己的 feature 分支后，执行此命令实现变基")]),t._v(" "),a("li",[t._v("解决冲突后的提交不是使用 commit 命令，而是执行 rebase 命令指定 "),a("code",[t._v("git rebase --continue")]),t._v(" 选项。")]),t._v(" "),a("li",[t._v("若要取消 rebase，指定 "),a("code",[t._v("--abort")]),t._v(" 选项。")])])]),t._v(" "),a("li",[a("code",[t._v("git push --force-with-lease origin feature/xx")]),t._v(" "),a("ul",[a("li",[t._v("强制把本地 rebase 之后的分支推送到远端")])])]),t._v(" "),a("li",[t._v("变基操作的实质是丢弃一些现有的提交，然后相应地新建一些内容一样但实际上不同的提交。")]),t._v(" "),a("li",[t._v("撤销提交的不同:如果使用 merge 进行合并，可以使用 revert 命令对 merge 的内容进行撤销操作（参考 revert），而使用 rebase 则不行（已经没有 merge commit 了），而需要使用 rebase -i 对提交进行重新编辑。")]),t._v(" "),a("li",[t._v("使用 "),a("code",[t._v("git rebase -i <branch>")]),t._v(" 可以进入交互式模式，可以对「某一范围内的提交」进行重新编辑。")]),t._v(" "),a("li",[t._v("默认情况下，直接使用 "),a("code",[t._v("git rebase -i")]),t._v(" 命令的操作对象为自最后一次从 origin 仓库拉取或者向 origin 推送之后的所有提交。")]),t._v(" "),a("li",[t._v("删除提交：如果想删除某个提交，使用 "),a("code",[t._v("git rebase -i")]),t._v(" 后直接在编辑器中删除那一行 commit 即可")]),t._v(" "),a("li",[t._v("拆分提交：如果想把某个 commit 拆分成多个 commit，可以使用 edit 作为 action，edit 表示 使用该提交，但是先在这一步停一下，等我重新编辑完再进行下一步。")]),t._v(" "),a("li",[t._v("合并提交：\n"),a("ul",[a("li",[t._v("首先找到起始 commit 的 前一个例如：aaa，rebase 会显示当前分支从这个 comimt 之后的所有 commit。")]),t._v(" "),a("li",[t._v("执行 "),a("code",[t._v("git rebase -i 865b2ac")]),t._v("，会自动唤出编辑器，假如想把后三个提交合并到第一个中去，这里需要用到 squash，该 action 表示 使用该提交，但是把它与前一提交合并，所以只需把后三个的 action 改为 squash 即可。")]),t._v(" "),a("li",[t._v("保存之后，会唤出编辑器提示基于历史的提交信息创建一个新的提交信息，也就是需要用户编辑一下合并之后的 commit 信息，更改提示信息并保存即可。")])])])]),t._v(" "),a("h3",{attrs:{id:"git-reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[t._v("#")]),t._v(" git reset")]),t._v(" "),a("p",[t._v("强制回退，可能会把别人的代码也干掉")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("git reset --hard HEAD^SHA256")]),t._v(" "),a("ul",[a("li",[t._v("硬回退，不保留 stash")])])]),t._v(" "),a("li",[a("code",[t._v("git reset --soft HEAD^/SHA256")]),t._v(" "),a("ul",[a("li",[t._v("软回退，保留 stash")])])])]),t._v(" "),a("p",[t._v("reset 之后再提交代码时需要强制提交-f")]),t._v(" "),a("h3",{attrs:{id:"git-commit-amend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-amend"}},[t._v("#")]),t._v(" git commit --amend")]),t._v(" "),a("p",[t._v("直接修改当前的提交信息，如果代码有更改，则需要先执行 git add")]),t._v(" "),a("h3",{attrs:{id:"git-revert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-revert"}},[t._v("#")]),t._v(" git revert")]),t._v(" "),a("p",[t._v("原理是在当前提交后面，新增一条提交，抵消掉上一次提交导致的所有变化。它不会改变过去的提交历史，也不会影响后续的提交，所以是安全的，首选的，没有任何丢失代码风险的。")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("git revert commitId1 [commitid2 commitId3 ...]")])])]),t._v(" "),a("h3",{attrs:{id:"git-tag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-tag"}},[t._v("#")]),t._v(" git tag")]),t._v(" "),a("p",[t._v("Git 中的标签分为两种，一种是轻量标签（lightweight tag），一种是附注标签（annotated tag）。")]),t._v(" "),a("p",[t._v("tag 对应某次 commit， 是一个点，是不可移动的。branch 对应一系列 commit，是很多点连成的一根线，有一个 HEAD 指针，是可以依靠 HEAD 指针移动的。所以，两者的区别决定了使用方式，改动代码用 branch，不改动只查看用 tag。常用于上线之前对当前的 commit 记录打一个 tag，方便上线的代码有问题时可以及时回滚。")]),t._v(" "),a("p",[t._v("需要特别说明的是，如果我们想要修改 tag 检出代码分支，那么虽然分支中的代码改变了，但是 tag 标记的 commit 还是同一个，标记的代码是不会变的。")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("git tag <lightweght_name>")]),t._v("：为当前分支所在的提交记录打上轻量标签。")]),t._v(" "),a("li",[a("code",[t._v("git tag <lightweght_name> <commit SHA-1 value>")]),t._v("：为某次具体的提交记录打上轻量标签。")]),t._v(" "),a("li",[a("code",[t._v("git tag -a <anotated_name> -m <tag_message>")]),t._v("：为当前分支所在的提交记录打上附注标签。")]),t._v(" "),a("li",[a("code",[t._v("git tag")]),t._v("或"),a("code",[t._v("git tag -l")]),t._v("：列出所有的标签名。")]),t._v(" "),a("li",[a("code",[t._v("git ls-remote --tags origin")]),t._v("：查看远程所有 tag。")]),t._v(" "),a("li",[a("code",[t._v("git tag -d <tag_name>")]),t._v("：删除某个标签，本质上就是移除 "),a("code",[t._v(".git/refs/tags/")]),t._v(" 中对应的文件。")]),t._v(" "),a("li",[a("code",[t._v("git show <tag_name>")]),t._v("：显示标签对应提交记录的具体信息。")]),t._v(" "),a("li",[a("code",[t._v("git push <remote> <tag_name>")]),t._v("：推送某个标签到远程仓库。")]),t._v(" "),a("li",[a("code",[t._v("git push <remote> --tags")]),t._v("：推送所有标签到远程仓库。")]),t._v(" "),a("li",[a("code",[t._v("git tag -d <tagName>")]),t._v("：本地 tag 的删除。")]),t._v(" "),a("li",[a("code",[t._v("git push <remote> --delete <tag_name>")]),t._v("：删除远程仓库中的某个标签。")]),t._v(" "),a("li",[a("code",[t._v("git push <remote> :refs/tags/<tagname>")]),t._v("：删除远程仓库某个标签的等价方式，相当于将冒号前面的空值推送到远程标签名，从而高效地删除它。")]),t._v(" "),a("li",[a("code",[t._v("git checkout -b <branchName> <tagName>")]),t._v("：检出标签，因为 tag 本身指向的就是一个 commit，所以和根据 commit id 检出分支是一个道理。")]),t._v(" "),a("li",[a("code",[t._v("git fetch origin refs/tags/*:refs/tags/* --prune")]),t._v("：删除不在远程仓库上的任何本地标签。")]),t._v(" "),a("li",[t._v("为了自动获取标签，将以下行添加到您的"),a("code",[t._v(".git/config")]),t._v("文件中的条目下"),a("code",[t._v('[remote "origin"]')]),t._v("。"),a("code",[t._v("fetch = refs/tags/*:refs/tags/*")]),t._v("。")])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("新增 tag "),a("code",[t._v('git tag -a v1.0.0 -m "my version v1.0.0"')])])]),t._v(" "),a("li",[a("p",[t._v("查看 tag "),a("code",[t._v("git show v1.0.0")])])]),t._v(" "),a("li",[a("p",[t._v("推送远端 "),a("code",[t._v("git push origin v1.0.0")])])])]),t._v(" "),a("p",[t._v("PS: tag 和在哪个分支创建是没有关系的，tag 只是提交的别名。因此 commit 的能力 tag 均可以使用，比如"),a("code",[t._v("git reset")]),t._v("，"),a("code",[t._v("git revert [pre-tag]")])]),t._v(" "),a("h3",{attrs:{id:"git-stash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash"}},[t._v("#")]),t._v(" git stash")]),t._v(" "),a("ol",[a("li",[a("code",[t._v('git stash save "commit msg"')])]),t._v(" "),a("li",[a("code",[t._v("git stash apply SHA256/stash@{number}")])]),t._v(" "),a("li",[a("code",[t._v("git stash pop")]),t._v(" "),a("ul",[a("li",[t._v("默认最近一次 stash")])])]),t._v(" "),a("li",[a("code",[t._v("git stash list")])]),t._v(" "),a("li",[a("code",[t._v("git stash drop SHA256/stash@{number}")])]),t._v(" "),a("li",[t._v("误操作 "),a("code",[t._v("git stash drop")]),t._v(" 之后想恢复\n"),a("ul",[a("li",[a("code",[t._v("git fsck --lost-found")]),t._v(" 可以得到 SHA256 列表")]),t._v(" "),a("li",[a("code",[t._v("git show SHA256")]),t._v(" 可以查看详细信息")]),t._v(" "),a("li",[a("code",[t._v("git stash apply SHA256")]),t._v(" 应用")])])])]),t._v(" "),a("h3",{attrs:{id:"git-bisect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-bisect"}},[t._v("#")]),t._v(" git bisect")]),t._v(" "),a("p",[t._v("使用 git bisect 二分法定位问题的基本步骤：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("git bisect start [最近的出错的 commitid] [较远的正确的 commitid]")])]),t._v(" "),a("li",[t._v("测试相应的功能")]),t._v(" "),a("li",[a("code",[t._v("git bisect good")]),t._v(" 标记正确")]),t._v(" "),a("li",[t._v("直到出现问题则 标记错误 "),a("code",[t._v("git bisect bad")])]),t._v(" "),a("li",[t._v("提示的 commitid 就是导致问题的那次提交")]),t._v(" "),a("li",[t._v("具体示例参考"),a("a",{attrs:{href:"https://mp.weixin.qq.com/s/d0LvAd8cDQD_3KSX1fOpkQ",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("这里"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"git-cherry-pick"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-cherry-pick"}},[t._v("#")]),t._v(" git cherry-pick")]),t._v(" "),a("ol",[a("li",[t._v("选一次提交："),a("code",[t._v("git cherry-pick <commitHash>")])]),t._v(" "),a("li",[t._v("选多次提交："),a("code",[t._v("git cherry-pick <HashA> <HashB>")])]),t._v(" "),a("li",[t._v("选多次提交："),a("code",[t._v("git cherry-pick A..B")]),t._v("，提交 A 必须早于提交 B，提交 A 将不会包含在 Cherry pick 中")]),t._v(" "),a("li",[t._v("选多次提交："),a("code",[t._v("git cherry-pick A^..B")]),t._v("，包含提交 A")]),t._v(" "),a("li",[t._v("解决冲突后：1. "),a("code",[t._v("git add .")])]),t._v(" "),a("li",[t._v("解决冲突后：2. "),a("code",[t._v("git cherry-pick --continue")])]),t._v(" "),a("li",[t._v("发生代码冲突后，放弃合并，回到操作前的样子："),a("code",[t._v("git cherry-pick --abort")])]),t._v(" "),a("li",[t._v("发生代码冲突后，退出 Cherry pick，但是不回到操作前的样子："),a("code",[t._v("git cherry-pick --quit")])])]),t._v(" "),a("ul",[a("li",[t._v("Cherry pick 也支持转移另一个代码库的提交，方法是先将该库加为远程仓库。\n"),a("ol",[a("li",[t._v("添加了一个远程仓库 target："),a("code",[t._v("git remote add target git://gitUrl")])]),t._v(" "),a("li",[t._v("远程代码抓取到本地："),a("code",[t._v("git fetch target")])]),t._v(" "),a("li",[t._v("检查一下要从远程仓库转移的提交，获取它的哈希值："),a("code",[t._v("git log target/master")])]),t._v(" "),a("li",[t._v("使用 git cherry-pick 命令转移提交："),a("code",[t._v("git cherry-pick <commitHash>")])])])])]),t._v(" "),a("h3",{attrs:{id:"git-show-ref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-show-ref"}},[t._v("#")]),t._v(" git show-ref")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("git show-ref refs/heads/gh-pages")]),t._v("/"),a("code",[t._v("git show-ref gh-pages")]),t._v(": 检查本地是否存在某个分支")])]),t._v(" "),a("h3",{attrs:{id:"git-ls-remote"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-ls-remote"}},[t._v("#")]),t._v(" git ls-remote")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("git ls-remote origin refs/heads/gh-pages")]),t._v("/"),a("code",[t._v("git ls-remote origin gh-pages")]),t._v(": 检查远程仓库里是否有某个分支")])]),t._v(" "),a("h3",{attrs:{id:"git-checkout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout"}},[t._v("#")]),t._v(" git checkout")]),t._v(" "),a("ol",[a("li",[t._v("从远程拉一个本地不存在的新分支并切换到这个新分支上：")])]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git fetch origin\ngit checkout -b new-feature origin/new-feature\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"git-branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-branch"}},[t._v("#")]),t._v(" git branch")]),t._v(" "),a("ol",[a("li",[t._v("列出本地分支："),a("code",[t._v("git branch")])]),t._v(" "),a("li",[t._v("设置本地分支跟踪远程仓库分支，后续直接"),a("code",[t._v("git pull")]),t._v("或"),a("code",[t._v("git push")]),t._v("即可："),a("code",[t._v("git branch --set-upstream-to=origin/feature my-feature")])]),t._v(" "),a("li",[t._v("还可以使用"),a("code",[t._v("git config")]),t._v("命令配置 Git，在默认情况下自动设置对新分支的跟踪。你可以设置"),a("code",[t._v("branch.autoSetupMerge")]),t._v("配置选项为"),a("code",[t._v("always")]),t._v("，使 Git 在创建新分支时创建跟踪分支。")])]),t._v(" "),a("h3",{attrs:{id:"git-status"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-status"}},[t._v("#")]),t._v(" git status")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git status --porcelain .")]),t._v(': 命令将以紧凑的"porcelain"格式显示 Git 存储库中的文件状态。')])]),t._v(" "),a("h2",{attrs:{id:"修改-git-commit-msg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改-git-commit-msg"}},[t._v("#")]),t._v(" 修改 git commit msg")]),t._v(" "),a("ol",[a("li",[t._v("修改最近一次的 commit 信息 "),a("code",[t._v("git commit --amend")])]),t._v(" "),a("li",[a("code",[t._v("git reset --soft HEAD^")]),t._v(" 重新提交")]),t._v(" "),a("li",[a("code",[t._v("git log --oneline -5")]),t._v(" 查看最近 5 次 commit 的简要信息")]),t._v(" "),a("li",[t._v("比如要修改的 commit 是倒数第三条，使用下述命令：")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i HEAD~3\n退出保存 :wq\n执行 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase --continue\n执行 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -f 推送到服务端。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h2",{attrs:{id:"vscode-插件-扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vscode-插件-扩展"}},[t._v("#")]),t._v(" VSCode 插件/扩展")]),t._v(" "),a("h3",{attrs:{id:"git-graph"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-graph"}},[t._v("#")]),t._v(" Git Graph")]),t._v(" "),a("p",[t._v("可视化查看代码仓库分支和提交记录，右键管理操作分支")]),t._v(" "),a("h3",{attrs:{id:"gitlens"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlens"}},[t._v("#")]),t._v(" GitLens")]),t._v(" "),a("h3",{attrs:{id:"git-history"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-history"}},[t._v("#")]),t._v(" Git History")]),t._v(" "),a("p",[t._v("提交记录")]),t._v(" "),a("h3",{attrs:{id:"git-blame"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-blame"}},[t._v("#")]),t._v(" Git Blame")]),t._v(" "),a("p",[t._v("提交记录")]),t._v(" "),a("h3",{attrs:{id:"gitignore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitignore"}},[t._v("#")]),t._v(" .gitignore")]),t._v(" "),a("p",[t._v("为.gitignore 文件提供语法支持，远程下载.gitignore 模板")]),t._v(" "),a("h3",{attrs:{id:"git-project-manager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-project-manager"}},[t._v("#")]),t._v(" Git Project Manager")]),t._v(" "),a("h3",{attrs:{id:"git-history-diff"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-history-diff"}},[t._v("#")]),t._v(" Git History Diff")]),t._v(" "),a("p",[t._v("提交记录对比")]),t._v(" "),a("h3",{attrs:{id:"如何把一份本地代码同时上传-gitlab-和-gitee"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何把一份本地代码同时上传-gitlab-和-gitee"}},[t._v("#")]),t._v(" 如何把一份本地代码同时上传 gitlab 和 gitee")]),t._v(" "),a("p",[t._v("git 本身是分布式版本控制系统，可以同步到另外一个远程库，当然也可以同步到另外两个远程库，所以一个本地库可以既关联 GitHub，又关联码云！")]),t._v(" "),a("p",[t._v("使用多个远程库时，要注意 git 给远程库起的默认名称是 origin，如果有多个远程库，我们需要用不同的名称来标识不同的远程库。仍然以 learngit 本地库为例，先删除已关联的名为 origin 的远程库：")]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git remote rm origin\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("然后，先关联 GitHub 的远程库：")]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git remote add github git@github.com:xxx/LearnGit.git\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("注意，远程库的名称叫 github，不叫 origin 了。\n接着，再关联码云的远程库：")]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git remote add gitee git@gitee.com:xxx/LearnGit.git\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("同样注意，远程库的名称叫 gitee，不叫 origin。\n现在，我们用 git remote -v 查看远程库信息，可以看到两个远程库：")]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("gitee git@gitee.com:xxx/LearnGit.git (fetch)\ngitee git@gitee.com:xxx/LearnGit.git (push)\ngithub git@github.com:xxx/LearnGit.git (fetch)\ngithub git@github.com:xxx/LearnGit.git (push)如果要推送到GitHub，使用命令：\ngit push github master\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("如果要推送到码云，使用命令：")]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git push gitee master\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("这样一来，本地库就可以同时与多个远程库互相同步")]),t._v(" "),a("h3",{attrs:{id:"不切换-git-分支-却能同时在多个分支上工作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不切换-git-分支-却能同时在多个分支上工作"}},[t._v("#")]),t._v(" 不切换 Git 分支，却能同时在多个分支上工作")]),t._v(" "),a("p",[t._v("正在开发某个 feature，老板突然跳出来说让你做生产上的 hotfix，面对这种情况，使用 Git 的我们通常有两种解决方案：")]),t._v(" "),a("ol",[a("li",[t._v("草草提交未完成的 feature，然后切换分支到 hotfix")]),t._v(" "),a("li",[a("code",[t._v("git stash | git stash pop")]),t._v(" 暂存工作内容，然后再切换到 hotfix")]),t._v(" "),a("li",[a("code",[t._v("git clone")]),t._v(" 多个 repo")])]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("git-worktree")]),t._v("，仅需维护一个 repo，又可以同时在多个 branch 上工作，互不影响！！！")]),t._v(" "),a("p",[t._v("常用的其实只有下面这四个命令：")]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加一个worktree")]),t._v("\ngit worktree add [-f] [--detach] [--checkout] [--lock] [-b <new-branch>] <path> [<commit-ish>]\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出当前的worktree，在任意一个worktree下都可用")]),t._v("\ngit worktree list [--porcelain]\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 移除某些不需要的worktree")]),t._v("\ngit worktree remove [-f] <worktree>\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 清洁的兜底操作，可以让我们的工作始终保持整洁")]),t._v("\ngit worktree prune [-n] [-v] [--expire <expire>]\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("普及两个你可能忽视的 Git 知识点：")]),t._v(" "),a("ol",[a("li",[t._v("默认情况下， git init 或 git clone 初始化的 repo，只有一个 worktree，叫做 main worktree;")]),t._v(" "),a("li",[t._v("在某一个目录下使用 Git 命令，当前目录下要么有 .git 文件夹；要么有 .git 文件，如果只有 .git 文件，里面的内容必须是指向 .git 文件夹的;")])]),t._v(" "),a("p",[t._v("eg.")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v('git worktree add -b "hotfix/JIRA234-fix-naming" ../hotfix/JIRA234-fix-naming')]),t._v(".")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git worktree list")]),t._v(".")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git worktree remove hotfix/hotfix/JIRA234-fix-naming")]),t._v(".")])])]),t._v(" "),a("p",[t._v("建议：通常使用 git worktree，我会统一目录结构，比如 feature 目录下存放所有 feature 的 worktree，hotfix 目录下存放所有 hotfix 的 worktree，这样整个磁盘目录结构不至于因为创建多个 worktree 而变得混乱。")]),t._v(" "),a("h3",{attrs:{id:"git-命令设置别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-命令设置别名"}},[t._v("#")]),t._v(" git 命令设置别名")]),t._v(" "),a("ol",[a("li",[t._v("git config --global alias.ps push - 把 push 设为 ps；")]),t._v(" "),a("li",[t._v("手动编辑全局配置文件：\n"),a("ul",[a("li",[a("code",[t._v("nano ~/.gitconfig")])]),t._v(" "),a("li",[t._v("写入对应的别名对，例："),a("code",[t._v("co = checkout pl = pull")]),t._v("等并保存退出，")]),t._v(" "),a("li",[t._v("执行"),a("code",[t._v("source ~/.gitconfig")]),t._v("使改动生效")])])])]),t._v(" "),a("h3",{attrs:{id:"git-hooks-原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-hooks-原理"}},[t._v("#")]),t._v(" git hooks 原理")]),t._v(" "),a("ol",[a("li",[t._v("git 允许在各种操作之前添加一些 hook 脚本，如未正常运行则 git 操作不通过。最出名的还是以下两个：\n"),a("ul",[a("li",[t._v("precommit")]),t._v(" "),a("li",[t._v("prepush")])])]),t._v(" "),a("li",[t._v("hook 脚本置于目录 ~/.git/hooks 中，以「可执行文件」的形式存在。查看命令："),a("code",[t._v("ls -lah .git/hooks")]),t._v("。")]),t._v(" "),a("li",[t._v("git hooks 可使用 core.hooksPath 自定义脚本位置。")]),t._v(" "),a("li",[t._v("husky 即通过自定义 core.hooksPath 并将 npm scripts 写入其中的方式来实现此功能。\n"),a("ul",[a("li",[t._v("在"),a("code",[t._v("~/.husky")]),t._v(" 目录下手动创建 hook 脚本。如："),a("code",[t._v("vim .husky/pre-commit")])]),t._v(" "),a("li",[t._v("在 hook 脚本中做一些操作，如：在 pre-commit 中进行代码风格校验："),a("code",[t._v("npm run lint && npm run test")])])])])]),t._v(" "),a("h3",{attrs:{id:"git-设置识别文件名大小写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-设置识别文件名大小写"}},[t._v("#")]),t._v(" git 设置识别文件名大小写")]),t._v(" "),a("p",[t._v("需要在一个 git 仓库里设置："),a("code",[t._v("git config core.ignoreCase true/false")])]),t._v(" "),a("h3",{attrs:{id:"git-重命名文件-文件夹"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-重命名文件-文件夹"}},[t._v("#")]),t._v(" git 重命名文件/文件夹")]),t._v(" "),a("ol",[a("li",[t._v("单个文件："),a("code",[t._v("git mv dockerfile Dockerfile")])]),t._v(" "),a("li",[t._v("多个文件：有很多个文件都是名字大小写变化，这种情况：\n"),a("ol",[a("li",[t._v("首先可以移除所有 git 缓存："),a("code",[t._v("git rm -r --cached .")])]),t._v(" "),a("li",[t._v("这个命令将移除当前文件夹下所有文件/文件夹的 Git 缓存版本。运行这个命令后，会看到所有文件都显示在 git changes 中。")]),t._v(" "),a("li",[t._v("接下来，继续运行："),a("code",[t._v("git add --all .")])]),t._v(" "),a("li",[t._v("就可以重新添加所有文件，仅显示有更改的文件。")])])]),t._v(" "),a("li",[t._v("文件夹：借助一个临时的文件夹名字："),a("code",[t._v("git mv myfolder tempFolder && git mv tempFolder myFolder")]),t._v("，或者用 2 中的方法。")]),t._v(" "),a("li",[t._v("如果因为大小写问题已经导致远程仓库有俩重复文件，例：dockerfile Dockerfile\n"),a("ol",[a("li",[t._v("使用"),a("code",[t._v("git mv")]),t._v("命令重命名文件/文件夹:\n"),a("ul",[a("li",[a("code",[t._v("git mv old_file.txt new_file.txt")])]),t._v(" "),a("li",[a("code",[t._v("git mv old_folder new_folder")])])])]),t._v(" "),a("li",[a("code",[t._v('git commit -m "Rename file/folder"')])])])]),t._v(" "),a("li",[t._v("使用"),a("em",[t._v("git mv")]),t._v("的优点是:\n"),a("ol",[a("li",[t._v("保留文件/文件夹的历史记录和原有的提交信息。如果你手动删除后新增,那么新的文件就没有任何历史记录了。")]),t._v(" "),a("li",[t._v("使得"),a("em",[t._v("git diff")]),t._v("和"),a("em",[t._v("git blame")]),t._v("等命令仍然能跟踪到文件的历史变化。如果手动删除后新增,这些命令对新的文件就失效了。")]),t._v(" "),a("li",[t._v("从版本控制的角度更清晰地表示这是一个“重命名”操作,而不是删除后新增两个不相关的操作。")])])])]),t._v(" "),a("h3",{attrs:{id:"git-reflog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-reflog"}},[t._v("#")]),t._v(" git reflog")]),t._v(" "),a("p",[t._v("结合"),a("code",[t._v(".git/logs/HEAD")]),t._v("，勿删 commit 或分支之后找回。")]),t._v(" "),a("h3",{attrs:{id:"强制禁用-fast-forward"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制禁用-fast-forward"}},[t._v("#")]),t._v(" 强制禁用 Fast-Forward")]),t._v(" "),a("p",[a("code",[t._v("git merge --no-ff")]),t._v("会生成一个新的 commit。如果没有禁止 ff，那么有时候： 假如"),a("code",[t._v("learn-merge")]),t._v(" 分支的历史记录包含 "),a("code",[t._v("master")]),t._v(" 分支所有的历史记录，当我们要把"),a("code",[t._v("learn-merge")]),t._v("合并到"),a("code",[t._v("master")]),t._v("上时，这个合并是非常简单的。只需要通过把 "),a("code",[t._v("master")]),t._v(" 分支的 HEAD 位置移动到 "),a("code",[t._v("learn-merge")]),t._v(" 的最新 commit 上，Git 就会合并。fast-forward 模式下是不可能出现冲突的。"),a("strong",[t._v("此时，即 Fast-Forward 时，没有产生新的 commit！！！")])]),t._v(" "),a("h3",{attrs:{id:"压缩多次提交为一次-squash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#压缩多次提交为一次-squash"}},[t._v("#")]),t._v(" 压缩多次提交为一次 squash")]),t._v(" "),a("p",[a("strong",[t._v("没有 squash 这个命令！")])]),t._v(" "),a("ol",[a("li",[t._v("基础操作，逐次"),a("code",[t._v("git reset --soft HEAD^")]),t._v("，合并冲突，直至到合适的 commit。")]),t._v(" "),a("li",[t._v("使用"),a("code",[t._v("git merge --squash branchName")]),t._v("压缩 Git 提交：当我们使用 "),a("code",[t._v("--squash")]),t._v(" 选项执行 merge 时，Git 不会像在正常合并中那样在目标分支中创建合并提交。相反，Git 接受源分支中的所有更改，并将其作为本地更改放入目标分支的工作副本中，此时需要 add+commit 然后才可以 push。")])]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("\x3c!-- 不可以和 --no-ff同时使用 --\x3e\ngit merge --squash <source_branch_name_to_squash>\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("使用"),a("code",[t._v("git rebase -i HEAD~n")]),t._v("压缩 Git 提交：编辑器使用 pick 命令显示各种提交。它还显示有关可用命令的信息。我们将使用 squash（或 s）命令。其中"),a("code",[t._v("pick")]),t._v("开头的行表示要保留的主提交，其他的要压缩的提交开头改成"),a("code",[t._v("squash或s")]),t._v("。可以编辑提交的信息，然后保存退出即可，无需 add、commit。")])]),t._v(" "),a("h3",{attrs:{id:"git-是如何存储信息的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-是如何存储信息的"}},[t._v("#")]),t._v(" git 是如何存储信息的")]),t._v(" "),a("p",[t._v("查看"),a("code",[t._v(".git/objects")]),t._v(" 目录：")]),t._v(" "),a("ol",[a("li",[t._v("当使用 "),a("code",[t._v("git add")]),t._v(" 命令把文件加入暂存区时，git 会根据这个对象的内容计算出 SHA-1 值")]),t._v(" "),a("li",[t._v("git 接着会用 SHA-1 值的前 2 个字符作为目录名称（避免让"),a("code",[t._v(".git/objects")]),t._v(" 目录因为文件过多而降低读取效率），后 38 个字符作为文件名，创建目录及文件并放在"),a("code",[t._v(".git/objects")]),t._v(" 目录下")]),t._v(" "),a("li",[t._v("文件的内容则是 git 使用压缩算法把原本的内容压缩之后的结果（二进制 blob 文件）")]),t._v(" "),a("li",[t._v("git commit 存储的是：打包前存储的是全新文件，打包后使用了类似差异备份的方式进行存储")]),t._v(" "),a("li",[t._v("当"),a("code",[t._v(".git/objects")]),t._v(" 目录下对象过多时会自动触发资源回收，或者 git push 到远端服务器时，也可通过"),a("code",[t._v("git gc")]),t._v("手动触发")])]),t._v(" "),a("h2",{attrs:{id:"开启-ssr-之后无法从-github-下载项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启-ssr-之后无法从-github-下载项目"}},[t._v("#")]),t._v(" 开启 ssr 之后无法从 GitHub 下载项目")]),t._v(" "),a("p",[t._v("打开 SSR 的「HTTP 代理设置」，查看端口，勾选「HTTP 代理设置」。然后在 zsh 执行如下命令：")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global http.proxy http://127.0.0.1:port\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global https.proxy http://127.0.0.1:port\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"git-large-file-storage-lfs-大文件存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-large-file-storage-lfs-大文件存储"}},[t._v("#")]),t._v(" Git Large File Storage - LFS 大文件存储")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://git-lfs.github.com/",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("下载安装"),a("OutboundLink")],1),t._v("或"),a("code",[t._v("brew install git-lfs")])]),t._v(" "),a("li",[t._v("然后在 git bash 里面安装一下："),a("code",[t._v("git lfs install")])]),t._v(" "),a("li",[t._v("接着 track 一下准备上传的文件，按文件格式进行："),a("code",[t._v('git lfs track "*.psd"')])]),t._v(" "),a("li",[t._v("进行了上述步骤之后你的文件夹会多出一个"),a("code",[t._v(".gitattributes")]),t._v("文件。接下来的先 add，commit，push 这个文件，之后再进行大文件的上传(正常操作即可)：\n"),a("ol",[a("li",[a("code",[t._v("git add .gitattributes")])]),t._v(" "),a("li",[a("code",[t._v("git add file.psd")])]),t._v(" "),a("li",[a("code",[t._v('git commit -m "Add design file"')])]),t._v(" "),a("li",[a("code",[t._v("git push origin master")])])])]),t._v(" "),a("li",[t._v("请注意，定义 Git LFS 应该跟踪的文件类型本身不会将任何预先存在的文件转换为 Git LFS，例如其他分支上的文件或您之前的提交历史记录中的文件。为此，请使用 "),a("code",[t._v("git lfs migrate")]),t._v(" 命令，该命令具有一系列选项，旨在适应各种潜在用例。")])]),t._v(" "),a("h2",{attrs:{id:"git-拉代码出问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-拉代码出问题"}},[t._v("#")]),t._v(" git 拉代码出问题")]),t._v(" "),a("ol",[a("li",[t._v("换掉 Git 的 http 版本: "),a("code",[t._v("git config --global http.version HTTP/1.1")])]),t._v(" "),a("li",[t._v("更改 http buffer: "),a("code",[t._v("git config --global http.postBuffer 524288000")])])]),t._v(" "),a("h2",{attrs:{id:"git-submodule"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-submodule"}},[t._v("#")]),t._v(" git submodule")]),t._v(" "),a("p",[t._v("当项目比较复杂，部分代码希望独立为子模块进行版本控制时，可以使用 git submodule 功能。另一个有用的场景是：当项目依赖并跟踪一个开源的第三方库时，将第三方库设置为 submodule。")]),t._v(" "),a("p",[t._v("使用 git submodule 功能时，主项目仓库并不会包含子模块的文件，只会保留一份子模块的配置信息及版本信息，作为主项目版本管理的一部分。或者说 git 不会主动/自动帮我们把子模块的代码下载到本地。")]),t._v(" "),a("h3",{attrs:{id:"git-submodule-练习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-submodule-练习"}},[t._v("#")]),t._v(" git submodule 练习")]),t._v(" "),a("p",[t._v("假定我们有两个项目：project-main 和 project-sub-1，其中 project-main 表示主项目，而 project-sub-1 表示子模块项目。")]),t._v(" "),a("p",[t._v("接下来，我们希望在 project-main 中添加 project-sub-1 ，而又保持 project-sub-1 自身独立的版本控制。")]),t._v(" "),a("p",[t._v("一种选择是使用 git submodule。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("创建 submodule："),a("code",[t._v("git submodule add <submodule_url>")]),t._v("可以在项目中创建一个子模块。")]),t._v(" "),a("ul",[a("li",[t._v("此时项目仓库中会多出两个文件：.gitmodules 和 project-sub-1 。")]),t._v(" "),a("li",[t._v("前者的内容是子模块的相关信息；而后者实际上保存的是子模块当前版本的版本号信息。")]),t._v(" "),a("li",[t._v("比如需要修改子模块默认使用的分支，那么可以在.gitmodules 中修改 branch")]),t._v(" "),a("li",[t._v("如果此前项目中已经存在 .gitmodules 文件，则会在文件内容中多出上述三行记录："),a("code",[t._v("submodule、path、url")]),t._v("。")]),t._v(" "),a("li",[t._v("通常此时可以在主项目中使用 "),a("code",[t._v('git commit -m "add submodule xxx"')]),t._v(" 提交一次，表示引入了某个子模块。提交后，在主项目仓库中，会显示出子模块文件夹，并带上其所在仓库的「版本号」。")]),t._v(" "),a("li",[t._v("上述步骤在创建子模块的过程中，会自动将相关代码克隆到对应路径，但对于后续使用者而言，对于主项目使用普通的 clone 操作并不会拉取到子模块中的实际代码。")]),t._v(" "),a("li",[t._v("如果希望子模块代码也获取到，一种方式是在克隆主项目的时候带上参数 "),a("code",[t._v("--recurse-submodules")]),t._v("，这样会递归地将项目中所有子模块的代码拉取。")])])]),t._v(" "),a("li",[a("p",[t._v("获取 submodule："),a("code",[t._v("git clone https://github.com/username/project-main.git --recurse-submodules")])]),t._v(" "),a("ul",[a("li",[t._v("另外一种可行的方式是，在当前主项目中执行："),a("code",[t._v("git submodule init")]),t._v("，"),a("code",[t._v("git submodule update")])])])]),t._v(" "),a("li",[a("p",[t._v("子模块内容的更新：对于子模块而言，并不需要知道引用自己的主项目的存在。对于自身来讲，子模块就是一个完整的 Git 仓库，按照正常的 Git 代码管理规范操作即可。")])]),t._v(" "),a("li",[a("p",[t._v("对于主项目而言，子模块的内容发生变动时，通常有三种情况：")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("当前项目下子模块文件夹内的内容发生了未跟踪的内容变动；这时进入子模块文件夹，按照子模块内部的版本控制体系提交代码即可。")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("当前项目下子模块文件夹内的内容发生了版本变化；可以使用 "),a("code",[t._v("git add/commit")]),t._v(" 将其添加到主项目的代码提交中，实际的改动就是那个子模块 文件 所表示的版本信息，通常当子项目更新后，主项目修改其所依赖的版本时，会产生类似这种情景的 commit 提交信息。")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[t._v("当前项目下子模块文件夹内的内容没变，但是子模块远程有更新；此时「当前主项目记录的子模块版本」还没有变化，在主项目看来当前情况一切正常。此时，需要让主项目主动进入子模块拉取新版代码，进行升级操作-"),a("code",[t._v("git pull origin master")]),t._v("。当主项目的子项目特别多时，可能会不太方便，此时可以使用 "),a("code",[t._v("git submodule")]),t._v(" 的一个命令 foreach 执行："),a("code",[t._v("git submodule foreach 'git pull origin master'")])])])])])]),t._v(" "),a("li",[a("p",[t._v("情况汇总:")]),t._v(" "),a("ul",[a("li",[t._v("对于子模块，只需要管理好自己的版本，并推送到远程分支即可；")]),t._v(" "),a("li",[t._v("对于父模块，若子模块版本信息未提交，需要更新子模块目录下的代码，并执行 commit 操作提交子模块版本信息；")]),t._v(" "),a("li",[t._v("对于父模块，若子模块版本信息已提交，需要使用 "),a("code",[t._v("git submodule update")]),t._v(" ，Git 会自动根据子模块版本信息更新所有子模块目录的相关代码。")])])]),t._v(" "),a("li",[a("p",[t._v("主项目可以使用 "),a("code",[t._v("git submodule update")]),t._v(" 更新子模块的代码，但那是指 「当前主项目文件夹下的子模块目录内容」 与 「当前主项目记录的子模块版本」 不一致时，会参考后者进行更新。")])]),t._v(" "),a("li",[a("p",[t._v("删除子模块")]),t._v(" "),a("ul",[a("li",[t._v("先使用 "),a("code",[t._v("git submodule deinit")]),t._v(" 命令卸载一个子模块。这个命令如果添加上参数 "),a("code",[t._v("--force")]),t._v("，则子模块工作区内即使有本地的修改，也会被移除。该命令的实际效果，是自动在 "),a("code",[t._v(".git/config")]),t._v(" 中删除了以下内容："),a("code",[t._v("submodule、url...")])]),t._v(" "),a("li",[t._v("然后执行"),a("code",[t._v("git rm project-sub-1")]),t._v("移除 "),a("code",[t._v("project-sub-1")]),t._v(" 文件夹，并自动在 "),a("code",[t._v(".gitmodules")]),t._v(" 中删除了以下内容："),a("code",[t._v("submodule、path、url")]),t._v("。")]),t._v(" "),a("li",[t._v("此时，主项目中关于子模块的信息基本已经删除（虽然貌似 .git/modules 目录下还有残余）：执行"),a("code",[t._v("git commit -m ...")]),t._v("提交代码，完成对子模块的删除。")]),t._v(" "),a("li",[t._v("网上流传了一些偏法，主要步骤是直接移除模块，并手动修改 "),a("code",[t._v(".gitmodules")]),t._v("、"),a("code",[t._v(".git/config")]),t._v(" 和 "),a("code",[t._v(".git/modules")]),t._v(" 内容。包含了一大堆类似"),a("code",[t._v("git rm --cached <sub-module>")]),t._v("、"),a("code",[t._v("rm -rf <sub-moduel>")]),t._v("、"),a("code",[t._v("rm .gitmodules")]),t._v(" 和 "),a("code",[t._v("git rm --cached")]),t._v(" 之类的代码。")])])]),t._v(" "),a("li",[a("p",[t._v("submodule 管理起来不够灵活，可以使用 lerna 进行管理。")])]),t._v(" "),a("li",[a("p",[t._v("除了 submodule，还有个方法还可以的，就是 "),a("code",[t._v("mklink")]),t._v("（windows 是 "),a("code",[t._v("mklink")]),t._v("，Linux 是 "),a("code",[t._v("ln -s /path/to/src/origin /path/to/dst/target")]),t._v("，删除"),a("code",[t._v("rm -rf target")]),t._v("，修改"),a("code",[t._v("ln -snf [源文件或目录] [目标文件或目录]")]),t._v("），就是等于把子模块复制一份到主模块中，两边所有的修改都会自动同步。 "),a("code",[t._v("mklink /d/j sub-module ..\\sub-module\\")])])]),t._v(" "),a("li",[a("p",[t._v("第 2 步中的简写"),a("code",[t._v("git submodule update --init --recursive")])])]),t._v(" "),a("li",[a("p",[t._v("更换 submodule 的 url 也就是把 submodule 的 git 切换到另一个仓库：")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("在子仓库中运行 "),a("code",[t._v("git remote set-url origin xx.git")]),t._v(" 属于直接更换远程仓库")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("在主目录"),a("code",[t._v(".gitsubmodule")]),t._v(" 文件中，直接修改 "),a("code",[t._v("url=xx.git")])])])])])]),t._v(" "),a("li",[a("p",[t._v("不 cd 进子模块，直接在主项目中拉取指定子模块更新的代码：")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[a("code",[t._v("git submodule update --init --recursive")]),t._v(" 递归")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("在"),a("code",[t._v(".gitsubmodule")]),t._v(" 文件中把其他不需要更新的模块先注释掉然后使用命令："),a("code",[t._v("git submodule update --recusive")])])])])])]),t._v(" "),a("li",[a("p",[t._v("把子模块添加到指定目录：在第一次拉取的时候使用这个命令"),a("code",[t._v("git add submodule -f xxxx.git [目标路径]")]),t._v("，一定要用-f，表示强制")])])]),t._v(" "),a("h2",{attrs:{id:"报奇怪的错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#报奇怪的错误"}},[t._v("#")]),t._v(" 报奇怪的错误")]),t._v(" "),a("h3",{attrs:{id:"known-hosts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#known-hosts"}},[t._v("#")]),t._v(" known_hosts")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("     @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nIT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nSomeone could be eavesdropping on you right now "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("man-in-the-middle attack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nIt is also possible that a "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" key has just been changed.\nThe fingerprint "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the RSA key sent by the remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" is\nSHA256:uNiVztksCsDhcc0u9e8BujQXVUpKZIDTMczCvj3tD2s.\nPlease contact your system administrator.\nAdd correct "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" /Users/eric/.ssh/known_hosts to get rid of this message.\nOffending RSA key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" /Users/eric/.ssh/known_hosts:1\nRSA "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" github.com has changed and you have requested strict checking.\nHost key verification failed.\nfatal: Could not "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" from remote repository.\n\nPlease "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" sure you have the correct access rights\nand the repository exists.\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("p",[t._v("解决办法：去"),a("code",[t._v("~/.ssh")]),t._v("下面把"),a("code",[t._v("known_hosts")]),t._v("文件给删了，然后重新 pull/push 代码即可。")]),t._v(" "),a("h3",{attrs:{id:"rebase-冲突解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rebase-冲突解决"}},[t._v("#")]),t._v(" rebase 冲突解决")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("Git: warning: Pulling without specifying how to reconcile divergent branches is\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不建议在没有为偏离分支指定合并策略时执行pull 操作")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"如何-sync-那些-fork-过来的项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何-sync-那些-fork-过来的项目"}},[t._v("#")]),t._v(" 如何 Sync 那些 fork 过来的项目")]),t._v(" "),a("p",[t._v("当源项目有更新和自己的修改发生冲突时，通常无法直接 Sync 代码，（如果不想把自己的改动丢掉）此时需要手动操作：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("git checkout -b Yidadaa-main mainYours")]),t._v(": 先从你的最新的（要合并的）分支中 checkout 一个新分支")]),t._v(" "),a("li",[a("code",[t._v("git pull git@github.com:Yidadaa/ChatGPT-Next-Web.git mainYours")]),t._v(": 把源项目的最新改动分支拉到你的项目中，这些操作都是在你自己的项目中操作的，注意！")]),t._v(" "),a("li",[a("code",[t._v("git checkout mainYours")]),t._v(": 切换到你自己的最新（主）分支中")]),t._v(" "),a("li",[a("code",[t._v("git merge --no-ff Yidadaa-main")]),t._v(": 合并源仓库的最新（主）分支到你的主分支上")]),t._v(" "),a("li",[t._v("解决代码冲突并 commit")]),t._v(" "),a("li",[a("code",[t._v("git push origin mainYours")]),t._v(": 把你的最新（主）分支推送到远程仓库。over。")])]),t._v(" "),a("p",[t._v("设置为 rebase："),a("code",[t._v("git config pull.rebase false")])]),t._v(" "),a("h2",{attrs:{id:"github-actions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-actions"}},[t._v("#")]),t._v(" GitHub Actions")]),t._v(" "),a("p",[t._v("记录本 repo 的打包、同步码云以及推送到服务器的各个步骤，具体看注释。重点是使用的那几个别人发布的 action，以及设置 secrets。")]),t._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# workflow name")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ci\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 任务jobID")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行环境")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用别人的action:")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# checkout@v3:拉代码")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# setup-node@v3:设置特定nodejs版本")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v3\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("submodules")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 子模块也一并pull下来")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fetch-depth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Fetch all history for .GitInfo and .Lastmod")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置nodejs版本")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/setup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node@v3\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node-version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装依赖")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Install\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm install\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新browserslist")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Update Browsers List\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npx browserslist@latest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("db\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建打包")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Build\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm run docs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("build\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把一些其他文件也拷贝到dist文件夹下")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重点是搞清楚当前的目录结构，然后就好操作了")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cp -r ../../../.github ./")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Copy demos/ and the other files to dist/\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n          cd ./docs/.vuepress/dist\n          cp -r ../../../CNAME ./\n          cp -r ../../../demos ./")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 发布到gh-pages")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deploy to GitHub Pages\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Cecilapp/GitHub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Pages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deploy@v3\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要自己在当前repo中设置，但是这个token需要先在user->settings里生成，同理，下面的各个secret都要提前设置好。具体可以谷歌")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("GITHUB_TOKEN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.ACCESS_TOKEN "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("email")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx@gmail.com\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build_dir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docs/.vuepress/dist"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打包生成产物的存放文件夹路径，optional")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pages "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要部署的分支，optional")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" domain.name "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成CNAME文件，optional")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jekyll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" no "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否使用的jekyll，optional")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("commit_message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deploy gh-pages"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# msg，optional")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把代码同步到Gitee")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Sync to Gitee\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Yikun/hub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mirror"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@master\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github/EricYangXD"')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dst")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gitee/EricYangXD"')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dst_key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.xxx "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dst_token")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.xxx "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mappings")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ericyangxd.github.io=>my-vuepress-blog"')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("static_list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ericyangxd.github.io"')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("force_update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("debug")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 发布到云服务器上")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# - name: Deploy to Oracle Cloud Server")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # 因为构建之后，需要把代码上传到服务器上，所以需要连接到ssh，并且做一个拷贝操作")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   uses: cross-the-world/scp-pipeline@master")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   env:")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#     WELCOME: "ssh scp ssh pipelines"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#     LASTSSH: "Doing something after copying"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   with:")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     host: ${{ secrets.xxx }}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     user: ${{ secrets.xxx }}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     pass: ${{ secrets.xxx }}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     port: ${{ secrets.xxx }}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     connect_timeout: 15s")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#     local: "./docs/.vuepress/dist/*"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#     remote: "/home/xxx/xxx/"')]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 发布到云服务器上")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deploy to Your Cloud Server\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" appleboy/scp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@master\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.xxx "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意，换成你自己的secrets")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.xxx "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意，换成你自己的secrets")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.xxx "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意，换成你自己的secrets")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.xxx "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意，换成你自己的secrets")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docs/.vuepress/dist/*"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # 注意，换成你自己的生成文件路径，需要配合下面的strip_components")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("target")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/zzz/xxx/"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意，换成你自己的nginx或其他服务器配置的资源地址")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("strip_components")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 打包是以"docs/.vuepress/dist/*"整体打包的，解压的时候需要往上回退3层，才能解压到"/home/zzz/xxx"下面')]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全流程结束")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Done\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v('\n          echo "Complete Successfully!"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br"),a("span",{staticClass:"line-number"},[t._v("53")]),a("br"),a("span",{staticClass:"line-number"},[t._v("54")]),a("br"),a("span",{staticClass:"line-number"},[t._v("55")]),a("br"),a("span",{staticClass:"line-number"},[t._v("56")]),a("br"),a("span",{staticClass:"line-number"},[t._v("57")]),a("br"),a("span",{staticClass:"line-number"},[t._v("58")]),a("br"),a("span",{staticClass:"line-number"},[t._v("59")]),a("br"),a("span",{staticClass:"line-number"},[t._v("60")]),a("br"),a("span",{staticClass:"line-number"},[t._v("61")]),a("br"),a("span",{staticClass:"line-number"},[t._v("62")]),a("br"),a("span",{staticClass:"line-number"},[t._v("63")]),a("br"),a("span",{staticClass:"line-number"},[t._v("64")]),a("br"),a("span",{staticClass:"line-number"},[t._v("65")]),a("br"),a("span",{staticClass:"line-number"},[t._v("66")]),a("br"),a("span",{staticClass:"line-number"},[t._v("67")]),a("br"),a("span",{staticClass:"line-number"},[t._v("68")]),a("br"),a("span",{staticClass:"line-number"},[t._v("69")]),a("br"),a("span",{staticClass:"line-number"},[t._v("70")]),a("br"),a("span",{staticClass:"line-number"},[t._v("71")]),a("br"),a("span",{staticClass:"line-number"},[t._v("72")]),a("br"),a("span",{staticClass:"line-number"},[t._v("73")]),a("br"),a("span",{staticClass:"line-number"},[t._v("74")]),a("br"),a("span",{staticClass:"line-number"},[t._v("75")]),a("br"),a("span",{staticClass:"line-number"},[t._v("76")]),a("br"),a("span",{staticClass:"line-number"},[t._v("77")]),a("br"),a("span",{staticClass:"line-number"},[t._v("78")]),a("br"),a("span",{staticClass:"line-number"},[t._v("79")]),a("br"),a("span",{staticClass:"line-number"},[t._v("80")]),a("br"),a("span",{staticClass:"line-number"},[t._v("81")]),a("br"),a("span",{staticClass:"line-number"},[t._v("82")]),a("br"),a("span",{staticClass:"line-number"},[t._v("83")]),a("br"),a("span",{staticClass:"line-number"},[t._v("84")]),a("br"),a("span",{staticClass:"line-number"},[t._v("85")]),a("br"),a("span",{staticClass:"line-number"},[t._v("86")]),a("br"),a("span",{staticClass:"line-number"},[t._v("87")]),a("br"),a("span",{staticClass:"line-number"},[t._v("88")]),a("br"),a("span",{staticClass:"line-number"},[t._v("89")]),a("br"),a("span",{staticClass:"line-number"},[t._v("90")]),a("br"),a("span",{staticClass:"line-number"},[t._v("91")]),a("br"),a("span",{staticClass:"line-number"},[t._v("92")]),a("br"),a("span",{staticClass:"line-number"},[t._v("93")]),a("br"),a("span",{staticClass:"line-number"},[t._v("94")]),a("br"),a("span",{staticClass:"line-number"},[t._v("95")]),a("br"),a("span",{staticClass:"line-number"},[t._v("96")]),a("br"),a("span",{staticClass:"line-number"},[t._v("97")]),a("br"),a("span",{staticClass:"line-number"},[t._v("98")]),a("br"),a("span",{staticClass:"line-number"},[t._v("99")]),a("br"),a("span",{staticClass:"line-number"},[t._v("100")]),a("br"),a("span",{staticClass:"line-number"},[t._v("101")]),a("br"),a("span",{staticClass:"line-number"},[t._v("102")]),a("br"),a("span",{staticClass:"line-number"},[t._v("103")]),a("br"),a("span",{staticClass:"line-number"},[t._v("104")]),a("br"),a("span",{staticClass:"line-number"},[t._v("105")]),a("br"),a("span",{staticClass:"line-number"},[t._v("106")]),a("br"),a("span",{staticClass:"line-number"},[t._v("107")]),a("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);